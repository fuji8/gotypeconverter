// Code generated by gotypeconverter; DO NOT EDIT.
package a

import (
	"a/basic"
	"a/cast"
	"a/ignoretags"
	"a/named"
	"a/normal"
	"a/pointer"
	"a/samename"
	"a/samename/foo"
	"a/slice"
	"a/structtag"

	"github.com/traPtitech/knoQ/domain"
	"github.com/traPtitech/knoQ/infra/db"
)

func ConvSRCToDST(src SRC) (dst DST) {
	dst.basic = convbasicSRCTobasicDST(src.basic)
	if len(src.external) > 0 {
		dst.external.Debug = src.external[0].Debug
	}
	dst.knoq = convdbEventTodomainEvent(src.knoq)
	dst.named = convnamedSRCTonamedDST(src.named)
	dst.normal = convnormalSRCTonormalDST(src.normal)
	if src.pointer != nil {
		dst.pointer = new(pointer.DST)
		(*dst.pointer) = convpointerSRCTopointerDST((*src.pointer))
	}
	dst.samename = convsamenameHogeTofooHoge(src.samename)
	dst.samename2 = convsamenameSRCTofooDST(src.samename2)
	dst.slice = convsliceSRCTosliceDST(src.slice)
	dst.structtag = convstructtagSRCTostructtagDST(src.structtag)
	dst.cast = convcastFooTocastBar(src.cast)
	dst.ignoretags = convignoretagsSRCToignoretagsDST(src.ignoretags)
	return
}

func convbasicSRCTobasicDST(src basic.SRC) (dst basic.DST) {
	dst = convbasicSRCTobasicDST(src)
	return
}

func convcastFooTocastBar(src cast.Foo) (dst cast.Bar) {
	dst = convcastFooTocastBar(src)
	return
}
func convdbEventTodomainEvent(src db.Event) (dst domain.Event) {
	dst = convdbEventTodomainEvent(src)
	return
}

func convignoretagsSRCToignoretagsDST(src ignoretags.SRC) (dst ignoretags.DST) {
	dst = convignoretagsSRCToignoretagsDST(src)
	return
}
func convnamedSRCTonamedDST(src named.SRC) (dst named.DST) {
	dst = convnamedSRCTonamedDST(src)
	return
}

func convnormalSRCTonormalDST(src normal.SRC) (dst normal.DST) {
	dst = convnormalSRCTonormalDST(src)
	return
}

func convpointerSRCTopointerDST(src pointer.SRC) (dst pointer.DST) {
	dst = convpointerSRCTopointerDST(src)
	return
}

func convsamenameHogeTofooHoge(src samename.Hoge) (dst foo.Hoge) {
	dst = convsamenameHogeTofooHoge(src)
	return
}

func convsamenameSRCTofooDST(src samename.SRC) (dst foo.DST) {
	dst = convsamenameSRCTofooDST(src)
	return
}

func convsliceSRCTosliceDST(src slice.SRC) (dst slice.DST) {
	dst = convsliceSRCTosliceDST(src)
	return
}

func convstructtagSRCTostructtagDST(src structtag.SRC) (dst structtag.DST) {
	dst = convstructtagSRCTostructtagDST(src)
	return
}
